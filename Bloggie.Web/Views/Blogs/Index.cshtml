@model Bloggie.Web.Models.ViewModels.BlogDetailsViewModel;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager;
@inject UserManager<IdentityUser> userManager;
@{
    ViewData["Title"] = Model.PageTitle;
}



<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3"> @Model.Heading</h1>

                <div class="d-flex justify-content-between mb=3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishDate.ToShortDateString()</span>
                </div>
                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        if (Model.Liked)
                        {
                            <a style="cursor:pointer">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnlike" style="cursor:pointer">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>
                        }
                    }
                    <span id="totalLikes">@Model.TotalLikes Likes</span>
                </div>
                <div class="mb-3">
                    @foreach (var item in Model.Tags)
                    {
                        <span class="badge bg-secondary ms-1">@item.Name</span>
                    }
                </div>
                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 blog-detail-content">
                    @Html.Raw(Model.Content)
                </div>
                <div class="card">
                    <div class="card-header">
                        <h5>
                            Comments
                        </h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <lable class="form-lable">Comment Description</lable>
                                    <input type="text" class="form-control" asp-for="CommentDescription" />
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark"> Submit</button>
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" asp-for="UrlHandle" />
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if (Model.Comment != null && Model.Comment.Any())
                        {
                            @foreach(var comment in Model.Comment)
                            {
                                  <div class="card mb-3">
                                    <div class="card-body">
                                        <div>
                                            @comment.Description
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@comment.UserName</span>
                                            <span class="text-secondary">@comment.DateAdded</span>
                                            </div>
                                    </div>
                                </div>
                                
                            }
                          

                        }
                    </div>
                </div>


            }
            else
            {
                <p>Blog post not found</p>
            }
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        const btnLikeElement = document.getElementById("btnlike");
        const totalLikeElement = document.getElementById('totalLikes')

        async function getTotalLikes() {
            fetch('/api/BlogPostLike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            }).then(data => data.json())
                .then(result => totalLikeElement.innerHTML = result);
        }
        async function addLikeForBlog() {
            fetch('/api/BlogPostLike/Add', {
                method: 'Post',
                headers: {
                    'Content-type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({ BlogPostId: '@Model.Id', UserId: '@userManager.GetUserId(User)' })
            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeForBlog);
                getTotalLikes();

            })
        }

        btnLikeElement.addEventListener('click', addLikeForBlog);
    </script>
}